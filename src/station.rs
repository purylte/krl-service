use serde::{ser::SerializeMap, Serialize};
use serde_json::{Map, Value};
use strum::IntoEnumIterator;
use strum_macros::{EnumIter, EnumString};

use crate::line::TrainLine;

#[derive(EnumIter, EnumString, Debug, Clone, Copy, Eq, PartialEq)]
pub enum Station {
    TNG,
    TTI,
    BPR,
    PI,
    KDS,
    RW,
    BOI,
    TKO,
    PSG,
    GGL,
    DU,
    BOO,
    CLT,
    BJD,
    CTA,
    DP,
    DPB,
    POC,
    UI,
    UP,
    LNA,
    TNT,
    PSM,
    PSMB,
    DRN,
    CW,
    TEB,
    MRI,
    CKI,
    GDD,
    JUA,
    SW,
    MGB,
    JAY,
    JAKK,
    NMO,
    CBN,
    BKS,
    KRI,
    CUK,
    KLDB,
    BUA,
    KLD,
    JNG,
    POK,
    KMT,
    GST,
    PSE,
    KMO,
    RJW,
    KPB,
    CKR,
    MTM,
    CIT,
    TB,
    BKST,
    MTR,
    SUD,
    SUDB,
    KAT,
    THB,
    AK,
    RK,
    CTR,
    MJ,
    CKY,
    TGS,
    TEJ,
    DAR,
    CJT,
    PRP,
    CC,
    CSK,
    SRP,
    RU,
    SDM,
    JMG,
    PDJ,
    KBY,
    PLM,
    AC,
    TPK,
}

impl Station {
    pub fn name(&self) -> &str {
        match *self {
            Station::TNG => "TANGERANG",
            Station::TTI => "TANAHTINGGI",
            Station::BPR => "BATUCEPER",
            Station::PI => "PORIS",
            Station::KDS => "KALIDERES",
            Station::RW => "RAWABUAYA",
            Station::BOI => "BOJONGINDAH",
            Station::TKO => "TAMANKOTA",
            Station::PSG => "PESING",
            Station::GGL => "GROGOL",
            Station::DU => "DURI",
            Station::DP => "DEPOK",
            Station::DPB => "DEPOKBARU",
            Station::POC => "PONDOKCINA",
            Station::UI => "UNIV.INDONESIA",
            Station::UP => "UNIV.PANCASILA",
            Station::LNA => "LENTENGAGUNG",
            Station::TNT => "TANJUNGBARAT",
            Station::PSM => "PASARMINGGU",
            Station::PSMB => "PAS.MINGGUBARU",
            Station::DRN => "DURENKALIBATA",
            Station::CW => "CAWANG",
            Station::TEB => "TEBET",
            Station::MRI => "MANGGARAI",
            Station::CKI => "CIKINI",
            Station::GDD => "GONDANGDIA",
            Station::JUA => "JUANDA",
            Station::SW => "SAWAHBESAR",
            Station::MGB => "MANGGABESAR",
            Station::JAY => "JAYAKARTA",
            Station::JAKK => "JAKARTAKOTA",
            Station::BOO => "BOGOR",
            Station::CLT => "CILEBUT",
            Station::BJD => "BOJONGGEDE",
            Station::CTA => "CITAYAM",
            Station::NMO => "NAMBO",
            Station::CBN => "CIBINONG",
            Station::BKS => "BEKASI",
            Station::KRI => "KRANJI",
            Station::CUK => "CAKUNG",
            Station::KLDB => "KLENDERBARU",
            Station::BUA => "BUARAN",
            Station::KLD => "KLENDER",
            Station::JNG => "JATINEGARA",
            Station::POK => "PONDOKJATI",
            Station::KMT => "KRAMAT",
            Station::GST => "GANGSENTIONG",
            Station::PSE => "PASARSENEN",
            Station::KMO => "KEMAYORAN",
            Station::RJW => "RAJAWALI",
            Station::KPB => "KAMPUNGBANDAN",
            Station::CKR => "CIKARANG",
            Station::MTM => "M.TELAGAMURNI",
            Station::CIT => "CIBITUNG",
            Station::TB => "TAMBUN",
            Station::BKST => "BEKASITIMUR",
            Station::MTR => "MATRAMAN",
            Station::SUD => "SUDIRMAN",
            Station::SUDB => "SUDIRMANBARU",
            Station::KAT => "KARET",
            Station::THB => "TANAHABANG",
            Station::AK => "ANGKE",
            Station::RK => "RANGKASBITUNG",
            Station::CTR => "CITERAS",
            Station::MJ => "MAJA",
            Station::CKY => "CIKOYA",
            Station::TGS => "TIGARAKSA",
            Station::TEJ => "TENJO",
            Station::DAR => "DARU",
            Station::CJT => "CILEJIT",
            Station::PRP => "PARUNGPANJANG",
            Station::CC => "CICAYUR",
            Station::CSK => "CISAUK",
            Station::SRP => "SERPONG",
            Station::RU => "RAWABUNTU",
            Station::SDM => "SUDIMARA",
            Station::JMG => "JURANGMANGU",
            Station::PDJ => "PONDOKRANJI",
            Station::KBY => "KEBAYORAN",
            Station::PLM => "PALMERAH",
            Station::AC => "ANCOL",
            Station::TPK => "TANJUNGPRIUK",
        }
    }

    pub fn id(&self) -> &str {
        match *self {
            Station::TNG => "TNG",
            Station::TTI => "TTI",
            Station::BPR => "BPR",
            Station::PI => "PI",
            Station::KDS => "KDS",
            Station::RW => "RW",
            Station::BOI => "BOI",
            Station::TKO => "TKO",
            Station::PSG => "PSG",
            Station::GGL => "GGL",
            Station::DU => "DU",
            Station::BOO => "BOO",
            Station::CLT => "CLT",
            Station::BJD => "BJD",
            Station::CTA => "CTA",
            Station::DP => "DP",
            Station::DPB => "DPB",
            Station::POC => "POC",
            Station::UI => "UI",
            Station::UP => "UP",
            Station::LNA => "LNA",
            Station::TNT => "TNT",
            Station::PSM => "PSM",
            Station::PSMB => "PSMB",
            Station::DRN => "DRN",
            Station::CW => "CW",
            Station::TEB => "TEB",
            Station::MRI => "MRI",
            Station::CKI => "CKI",
            Station::GDD => "GDD",
            Station::JUA => "JUA",
            Station::SW => "SW",
            Station::MGB => "MGB",
            Station::JAY => "JAY",
            Station::JAKK => "JAKK",
            Station::NMO => "NMO",
            Station::CBN => "CBN",
            Station::BKS => "BKS",
            Station::KRI => "KRI",
            Station::CUK => "CUK",
            Station::KLDB => "KLDB",
            Station::BUA => "BUA",
            Station::KLD => "KLD",
            Station::JNG => "JNG",
            Station::POK => "POK",
            Station::KMT => "KMT",
            Station::GST => "GST",
            Station::PSE => "PSE",
            Station::KMO => "KMO",
            Station::RJW => "RJW",
            Station::KPB => "KPB",
            Station::CKR => "CKR",
            Station::MTM => "MTM",
            Station::CIT => "CIT",
            Station::TB => "TB",
            Station::BKST => "BKST",
            Station::MTR => "MTR",
            Station::SUD => "SUD",
            Station::SUDB => "SUDB",
            Station::KAT => "KAT",
            Station::THB => "THB",
            Station::AK => "AK",
            Station::RK => "RK",
            Station::CTR => "CTR",
            Station::MJ => "MJ",
            Station::CKY => "CKY",
            Station::TGS => "TGS",
            Station::TEJ => "TEJ",
            Station::DAR => "DAR",
            Station::CJT => "CJT",
            Station::PRP => "PRP",
            Station::CC => "CC",
            Station::CSK => "CSK",
            Station::SRP => "SRP",
            Station::RU => "RU",
            Station::SDM => "SDM",
            Station::JMG => "JMG",
            Station::PDJ => "PDJ",
            Station::KBY => "KBY",
            Station::PLM => "PLM",
            Station::AC => "AC",
            Station::TPK => "TPK",
        }
    }

    pub fn line(&self) -> Vec<TrainLine> {
        match *self {
            Station::TNG => vec![TrainLine::T],
            Station::TTI => vec![TrainLine::T],
            Station::BPR => vec![TrainLine::T],
            Station::PI => vec![TrainLine::T],
            Station::KDS => vec![TrainLine::T],
            Station::RW => vec![TrainLine::T],
            Station::BOI => vec![TrainLine::T],
            Station::TKO => vec![TrainLine::T],
            Station::PSG => vec![TrainLine::T],
            Station::GGL => vec![TrainLine::T],
            Station::DU => vec![TrainLine::T, TrainLine::C],
            Station::BOO => vec![TrainLine::B],
            Station::CLT => vec![TrainLine::B],
            Station::BJD => vec![TrainLine::B],
            Station::CTA => vec![TrainLine::B],
            Station::DP => vec![TrainLine::B],
            Station::DPB => vec![TrainLine::B],
            Station::POC => vec![TrainLine::B],
            Station::UI => vec![TrainLine::B],
            Station::UP => vec![TrainLine::B],
            Station::LNA => vec![TrainLine::B],
            Station::TNT => vec![TrainLine::B],
            Station::PSM => vec![TrainLine::B],
            Station::PSMB => vec![TrainLine::B],
            Station::DRN => vec![TrainLine::B],
            Station::CW => vec![TrainLine::B],
            Station::TEB => vec![TrainLine::B],
            Station::MRI => vec![TrainLine::B, TrainLine::C],
            Station::CKI => vec![TrainLine::B],
            Station::GDD => vec![TrainLine::B],
            Station::JUA => vec![TrainLine::B],
            Station::SW => vec![TrainLine::B],
            Station::MGB => vec![TrainLine::B],
            Station::JAY => vec![TrainLine::B],
            Station::JAKK => vec![TrainLine::B, TrainLine::TP],
            Station::NMO => vec![TrainLine::B],
            Station::CBN => vec![TrainLine::B],
            Station::BKS => vec![TrainLine::C],
            Station::KRI => vec![TrainLine::C],
            Station::CUK => vec![TrainLine::C],
            Station::KLDB => vec![TrainLine::C],
            Station::BUA => vec![TrainLine::C],
            Station::KLD => vec![TrainLine::C],
            Station::JNG => vec![TrainLine::C],
            Station::POK => vec![TrainLine::C],
            Station::KMT => vec![TrainLine::C],
            Station::GST => vec![TrainLine::C],
            Station::PSE => vec![TrainLine::C],
            Station::KMO => vec![TrainLine::C],
            Station::RJW => vec![TrainLine::C],
            Station::KPB => vec![TrainLine::C, TrainLine::TP],
            Station::CKR => vec![TrainLine::C],
            Station::MTM => vec![TrainLine::C],
            Station::CIT => vec![TrainLine::C],
            Station::TB => vec![TrainLine::C],
            Station::BKST => vec![TrainLine::C],
            Station::MTR => vec![TrainLine::C],
            Station::SUD => vec![TrainLine::C],
            Station::SUDB => vec![TrainLine::C],
            Station::KAT => vec![TrainLine::C],
            Station::THB => vec![TrainLine::R, TrainLine::C],
            Station::AK => vec![TrainLine::C],
            Station::RK => vec![TrainLine::R],
            Station::CTR => vec![TrainLine::R],
            Station::MJ => vec![TrainLine::R],
            Station::CKY => vec![TrainLine::R],
            Station::TGS => vec![TrainLine::R],
            Station::TEJ => vec![TrainLine::R],
            Station::DAR => vec![TrainLine::R],
            Station::CJT => vec![TrainLine::R],
            Station::PRP => vec![TrainLine::R],
            Station::CC => vec![TrainLine::R],
            Station::CSK => vec![TrainLine::R],
            Station::SRP => vec![TrainLine::R],
            Station::RU => vec![TrainLine::R],
            Station::SDM => vec![TrainLine::R],
            Station::JMG => vec![TrainLine::R],
            Station::PDJ => vec![TrainLine::R],
            Station::KBY => vec![TrainLine::R],
            Station::PLM => vec![TrainLine::R],
            Station::AC => vec![TrainLine::TP],
            Station::TPK => vec![TrainLine::TP],
        }
    }
    pub fn is_transit_station(&self) -> bool {
        match *self {
            Station::DU => true,
            Station::MRI => true,
            Station::JAKK => true,
            Station::KPB => true,
            Station::THB => true,
            _ => false,
        }
    }

    pub fn json() -> Value {
        let mut map = Map::new();
        for station in Station::iter() {
            map.insert(station.name().into(), station.id().into());
        }
        Value::Object(map)
    }
}

impl Serialize for Station {
    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    where
        S: serde::Serializer,
    {
        let mut map = serializer.serialize_map(Some(2))?;
        map.serialize_entry("name", self.name())?;
        map.serialize_entry("id", self.id())?;
        map.end()
    }
}
